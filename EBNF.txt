EBNF

BLOCK = { COMMAND | FUNCDEC };

COMMAND = VARDEC | VAREQUAL | FUNCCALL | PRINT | WHILE | IF | RETURN;

FUNCDEC = "I_AM_GROOT", NAME, "(", {NAME, "::", TYPE}, ")", "::", TYPE, {COMMAND}, "GROOT";

VARDEC = "I_GROOT", NAME, "::", TYPE;

VAREQUAL = NAME, "=", RELEXP | "readline()";

FUNCCALL = NAME, "(", {RELEXP, ","}, ")";

PRINT = "println(", RELEXP, ")";

WHILE =  "GROOT?!", RELEXP, {COMMAND}, "GROOT";

IF = "GROOT?", RELEXP, {COMMAND}, ELSE | ELSEIF | "", "GROOT";

ELSE = "NOT_GROOT", {COMMAND};

ELSEIF = "NOT_GROOT?", RELEXP, {COMMAND}, ELSE | ELSEIF | "", "GROOT";

RETURN = "REGROOT", RELEXP;

RELEXP = EXP, { "==" | ">" | "<", EXP};

EXP = TERM, {"+" | "-" | "||", TERM};

TERM = FACTOR, {"*" | "/" | "&&", FACTOR};

FACTOR = NUMBER | STRING | BOOL | ("+", FACTOR) | ("-", FACTOR) | ("!", FACTOR) | ("(", RELEXP, ")") | NAME | FUNCCALL;

NUMBER = DIGIT, { DIGIT };

STRING = '"', ((' ' | LETTER | DIGIT | '' ) , { ( ' ' | LETTER | DIGIT | '') }), '"';

NAME = ((' ' | LETTER | DIGIT | '' ) , { ( ' ' | LETTER | DIGIT | '') });

LETTER = ( a | ... | z | A | ... | Z ) ;

DIGIT = ( 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0 ) ;

TYPE = "Bool" | "Int" | "String";

BOOL = ( 'groot' | '!groot') ;
